import os
import zipfile
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad

# ๐ ุฅุนุฏุงุฏ ุงูููุชุงุญ AES (ุจุงุณูุฑุฏ = "0" ูุญูู ุฅูู 16 ุจุงูุช)
KEY = b"0".ljust(16, b"\0")  # AES-128-ECB

# ๐ ููู ุงูู ZIP ุงูุฃูู ุงููู ุจูู ุงูุฃุณูุงุก
ZIP_FILE = "Decrypt.zip"
EXTRACT_DIR = "decrypt_files"
OUTPUT_DIR = "encrypted_files"

# ุชุฃูุฏ ูู ูุฌูุฏ ูุฌูุฏ ุงูุฅุฎุฑุงุฌ
os.makedirs(OUTPUT_DIR, exist_ok=True)

# ุงุณุชุฎุฑุงุฌ ุงููููุงุช ูู Decrypt.zip
with zipfile.ZipFile(ZIP_FILE, 'r') as zip_ref:
    zip_ref.extractall(EXTRACT_DIR)

# ุฌูุจ ุฃุณูุงุก ุงููููุงุช ุงููุณุชุฎุฑุฌุฉ
files = os.listdir(EXTRACT_DIR)

print("=== ุงููุงุฆูุฉ ===")
for i, fname in enumerate(files, 1):
    print(f"{i}. {fname}")

choice = input("ุงุฎุชุฑ ุฑูู: ")

try:
    idx = int(choice) - 1
    if idx < 0 or idx >= len(files):
        raise ValueError("ุฎูุงุฑ ุบูุฑ ุตุงูุญ")

    selected_file = files[idx]
    file_path = os.path.join(EXTRACT_DIR, selected_file)

    # ูุฑุงุกุฉ ูุญุชูู ุงูููู
    with open(file_path, "rb") as f:
        data = f.read()

    # ุชุดููุฑ AES-128-ECB
    cipher = AES.new(KEY, AES.MODE_ECB)
    encrypted = cipher.encrypt(pad(data, AES.block_size))

    # ุญูุธ ุงูููู ุงููุดูุฑ ุจููุณ ุงูุงุณู + .cipher
    out_file = os.path.join(OUTPUT_DIR, selected_file + ".cipher")
    with open(out_file, "wb") as f:
        f.write(encrypted)

    print(f"โ ุชู ุฅูุดุงุก ุงูููู ุงููุดูุฑ: {out_file}")

except Exception as e:
    print("ุฎุทุฃ:", e)